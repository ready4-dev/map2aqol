[{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ready4-dev.github.io/youthu/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Economic analysis","text":"main motivation behind youthu package extend types economic analysis can undertaken single group (e.g. pilot study, health service records) matched groups (e.g. trial) longitudinal datasets include measures health utility. article focuses application matched group datasets.","code":""},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"example-dataset","dir":"Articles","previous_headings":"","what":"Example dataset","title":"Economic analysis","text":"First, must first import data. example use fake dataset. dataset includes 268 matched comparisons, comparison containing baseline follow-records one intervention arm participant one control arm participant. first records follows. First records input dataset dataset contains features make possible use conjunction youthu’s economic analysis functions. requirements described vignette finding using models compatible models predict QALYs; dataset also contains cost variable, requirement , though , economic analyses can undertaken youthu.","code":"ds_tb <- make_fake_ds_two() ## Joining, by = c(\"fkClientID\", \"study_arm_chr\")"},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"limitations-of-datasets-without-measures-of-health-utility","dir":"Articles","previous_headings":"","what":"Limitations of datasets without measures of health utility","title":"Economic analysis","text":"notable omission dataset measure utility. omission means , absence using mapping algorithms included youthu, feasible types economic evaluation apply dataset likely cost-consequence analysis (synopsis differences range measures presented alongside cost differences) cost-effectiveness analysis (summary statistic - incremental cost-effectiveness ratio ICER - calculated dividing differences costs differences single outcome measure). types economic analyses can relatively simple interpret either intervention control arm simultaneously cheaper effective across included outcome measures. However, conditions don’t hold sample data. pattern results summarised create significant barriers meaningfully interpreting economic evaluations based cost-consequence cost-effectiveness analysis: cost-effectiveness analysis change PHQ-9 benefit measure difficult interpret Intervention arm effective costly, begs question worth paying extra dollars improvement? Also - judgment cost-effectiveness remain study measured slightly different incremental benefit recorded change longer shorter time horizon? likely commonly used value money benchmark improvements measured PHQ-9, time weighting associated measure. Furthermore, potential funding intervention budget allocated non-depressive illnesses (e.g. physical health), results cost-effectiveness analysis using PHQ-9 benefit measure readily comparable economic evaluations interventions illness groups using different benefit measures potentially competing scarce funding. cost consequence analyses summarised differences costs differences changes PHQ-9 SOFAS score difficult interpret intervention effective control improvements measured PHQ-9 (lower scores better), control group superior benefits based functioning improvements measured SOFAS scores (higher scores better). lack formal weighting trade clinical symptoms functioning means interpretation analysis highly subjective likely change across potential decision makers. types short-comings can significantly addressed undertaking cost-utility analyses (CUAs) : use measure benefit - Quality Adjusted Life Year (QALY) - captures multiple domains health, weighted time population preferences single index measure can applied across health conditions; published benchmark willingness pay values QALYs routinely used decision makers many countries make ICER statistics readily interpretable context health budget allocation. rest article demonstrates youthu functions can used undertake CUA based analyses type data just profiled.","code":"summary((ds_tb %>% dplyr::filter(study_arm_chr == \"Control\" & round == \"Baseline\"))[5:6]) ##       PHQ9          SOFAS       ##  Min.   : 0.0   Min.   :39.00   ##  1st Qu.: 7.0   1st Qu.:60.00   ##  Median :12.0   Median :66.00   ##  Mean   :10.9   Mean   :66.13   ##  3rd Qu.:15.0   3rd Qu.:72.00   ##  Max.   :19.0   Max.   :89.00 summary((ds_tb %>% dplyr::filter(study_arm_chr == \"Control\" & round == \"Follow-up\"))[5:7]) ##       PHQ9            SOFAS         costs_dbl      ##  Min.   : 0.000   Min.   :39.00   Min.   : 889.9   ##  1st Qu.: 4.000   1st Qu.:64.00   1st Qu.:1321.1   ##  Median : 8.000   Median :71.00   Median :1486.7   ##  Mean   : 8.493   Mean   :70.65   Mean   :1489.0   ##  3rd Qu.:13.000   3rd Qu.:77.00   3rd Qu.:1627.0   ##  Max.   :27.000   Max.   :98.00   Max.   :2216.5 summary((ds_tb %>% dplyr::filter(study_arm_chr == \"Intervention\" & round == \"Baseline\"))[5:6]) ##       PHQ9           SOFAS       ##  Min.   : 0.00   Min.   :36.00   ##  1st Qu.: 7.00   1st Qu.:61.00   ##  Median :11.00   Median :67.00   ##  Mean   :10.81   Mean   :66.74   ##  3rd Qu.:15.00   3rd Qu.:72.25   ##  Max.   :19.00   Max.   :88.00 summary((ds_tb %>% dplyr::filter(study_arm_chr == \"Intervention\" & round == \"Follow-up\"))[5:7]) ##       PHQ9            SOFAS      costs_dbl      ##  Min.   : 0.000   Min.   :40   Min.   : 923.4   ##  1st Qu.: 2.000   1st Qu.:60   1st Qu.:1625.6   ##  Median : 6.500   Median :68   Median :1777.3   ##  Mean   : 6.851   Mean   :68   Mean   :1807.8   ##  3rd Qu.:11.000   3rd Qu.:77   3rd Qu.:1996.0   ##  Max.   :25.000   Max.   :93   Max.   :2872.7"},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"predict-adolescent-aqol-6d-health-utility","dir":"Articles","previous_headings":"Using youthu in a cost-utility analysis workflow","what":"Predict adolescent AQoL-6D health utility","title":"Economic analysis","text":"first step identify youthu models use predict adolescent AQoL-6D apply models data. step explained detail another vignette article finding using transfer utility models, dealt briefly . First make sure dataset can used prediction dataset conjunction model intend using. now use preferred model predict health utility measures dataset.","code":"predn_ds_ls <- make_predn_metadata_ls(ds_tb,                                       cmprsn_groups_chr = c(\"Intervention\", \"Control\"),                                       cmprsn_var_nm_1L_chr = \"study_arm_chr\",                                       costs_var_nm_1L_chr = \"costs_dbl\",                                       id_var_nm_1L_chr = \"fkClientID\",                                       msrmnt_date_var_nm_1L_chr = \"date_psx\",                                       round_var_nm_1L_chr = \"round\",                                       round_bl_val_1L_chr = \"Baseline\",                                       utl_var_nm_1L_chr = \"AQoL6D_HU\",                                       mdls_lup = get_mdls_lup(utility_type_chr = \"AQoL-6D\",                                                               mdl_predrs_in_ds_chr = c(\"PHQ9 total score\",                                                                                        \"SOFAS total score\"),                                                               ttu_dv_nms_chr = \"TTU\"),                                       mdl_nm_1L_chr =  \"PHQ9_SOFAS_1_OLS_CLL\") ds_tb <- add_utl_predn(ds_tb,                        predn_ds_ls = predn_ds_ls) %>%   dplyr::select(fkClientID, round, study_arm_chr, date_psx, duration_prd, dplyr::everything()) ## Joining, by = c(\"fkClientID\", \"round\")"},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"calculate-qalys","dir":"Articles","previous_headings":"Using youthu in a cost-utility analysis workflow","what":"Calculate QALYs","title":"Economic analysis","text":"Next combine health utility data interval measurement data calculate QALYs add dataset. First records updated dataset QALYs","code":"ds_tb  <- ds_tb %>% add_qalys_to_ds(predn_ds_ls = predn_ds_ls,                                     include_predrs_1L_lgl = T,                                     reshape_1L_lgl = T)"},{"path":"https://ready4-dev.github.io/youthu/articles/Economic_Analysis.html","id":"analyse-results","dir":"Articles","previous_headings":"Using youthu in a cost-utility analysis workflow","what":"Analyse results","title":"Economic analysis","text":"Now can run main economic analysis. implemented make_hlth_ec_smry function, first bootstraps dataset (implemented boot function boot package) passing mean values costs QALYs bootstrap sample bcea function BCEA package calculate range health economic statistics. example pass value 50,000 willingness pay parameter, dollar amount commonly used Australia benchmark value QALY. Note, illustrative example request 1000 bootstrap iterations - practice number may higher. part output make_hlth_ec_smry function BCEA object, can use BCEA package produce number graphical summaries economic results. One important production cost-effectiveness plane. plot highlights , ICER $-98,145.56, less half bootstrapped iteration incremental cost QALY pairs fall within zone cost-effectiveness (green). fact, cost-effectiveness threshold supplied, results suggest 8% probability intervention cost-effective.","code":"he_smry_ls <- ds_tb %>% make_hlth_ec_smry(predn_ds_ls = predn_ds_ls,                                                  wtp_dbl = 50000,                                                  bootstrap_iters_1L_int = 1000L) library(ggplot2) BCEA::ceplane.plot(he_smry_ls$ce_res_ls, wtp =50000,                        area_color = \"green\",                     graph = \"ggplot2\",           theme = ggplot2::theme_light()) ## Warning: Duplicated aesthetics after name standardisation: colour"},{"path":"https://ready4-dev.github.io/youthu/articles/Prediction_With_Mdls.html","id":"search-select-and-retrieve-transfer-to-utility-models","dir":"Articles","previous_headings":"","what":"Search, select and retrieve transfer to utility models","title":"Predict Quality Adjusted Life Years (QALYs)","text":"identify datasets contain transfer utility models compatible youthu (ie developped TTU package), can use get_ttu_dv_dss function. function searches specified dataverses (example, TTU dataverse) datasets containing output TTU package. ttu_dv_dss_tb table summarises pertinent details dataset containing TTU models found preceding command. details include link scientific summary (“Article” column) associated dataset. Transfer Utility Datasets identify models predict specified type health utility one specified subset predictors, use: preceding command produce lookup table information includes catalogue names models, predictors used model analysis generated one. Selected elements Models Look-Table review summary information predictive performance specific model, use: information selected model can found online model catalogue, link can obtained following command: [1] “https://dataverse.harvard.edu/api/access/datafile/6484935”","code":"ttu_dv_dss_tb <- get_ttu_dv_dss(\"TTU\") mdls_lup <- get_mdls_lup(ttu_dv_dss_tb = ttu_dv_dss_tb,                          utility_type_chr = \"AQoL-6D\",                          mdl_predrs_in_ds_chr = c(\"PHQ9 total score\",                                                   \"SOFAS total score\")) get_dv_mdl_smrys(mdls_lup,                  mdl_nms_chr = \"PHQ9_SOFAS_1_OLS_CLL\") ## $PHQ9_SOFAS_1_OLS_CLL ##        Parameter Estimate    SE          95% CI ## 1 SD (Intercept)    0.348 0.017   0.312 , 0.382 ## 2      Intercept    0.428 0.129   0.174 , 0.686 ## 3  PHQ9 baseline   -9.115 0.249 -9.601 , -8.618 ## 4    PHQ9 change   -7.331 0.339 -8.007 , -6.665 ## 5 SOFAS baseline    0.960 0.172   0.616 , 1.292 ## 6   SOFAS change    1.146 0.235   0.674 , 1.607 ## 7             R2    0.767 0.012   0.743 , 0.788 ## 8           RMSE    0.925 0.004   0.922 , 0.928 ## 9          Sigma    0.406 0.012   0.384 , 0.429 get_mdl_ctlg_url(mdls_lup,                  mdl_nm_1L_chr = \"PHQ9_SOFAS_1_OLS_CLL\")"},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/articles/Prediction_With_Mdls.html","id":"import-data","dir":"Articles","previous_headings":"Prepare a prediction dataset for use with a selected transfer to utility model","what":"Import data","title":"Predict Quality Adjusted Life Years (QALYs)","text":"can now import inspect dataset plan using prediction. example use fake data. Illustrative example prediction dataset","code":"data_tb <- make_fake_ds_one()"},{"path":"https://ready4-dev.github.io/youthu/articles/Prediction_With_Mdls.html","id":"confirm-dataset-can-be-used-as-a-prediction-dataset","dir":"Articles","previous_headings":"Prepare a prediction dataset for use with a selected transfer to utility model","what":"Confirm dataset can be used as a prediction dataset","title":"Predict Quality Adjusted Life Years (QALYs)","text":"prediction dataset must contain variables correspond predictors model intend apply. allowable range required class predictor variable described min_val_dbl, max_val_dbl class_chr columns model predictors lookup table, can accessed call get_predictors_lup function. Model predictors lookup table prediction dataset must also include unique client identifier variable measurement time-point identifier variable (must factor two levels). dataset also needs long format (ie measures different time-points individual stacked top separate rows). can confirm conditions hold creating dataset metadata object using make_predn_metadata_ls function. creating metadata object, function checks dataset can used conjunction model specified mdl_nm_1L_chr argument. prediction dataset uses different variable names predictors specified predictors_lup lookup table, named vector detailing correspondence two sets variable names needs passed predr_vars_nms_chr argument. Finally, wish specify preferred variable name use predicted utility values applying model, can passing name utl_var_nm_1L_chr argument.","code":"predictors_lup <- get_predictors_lup(mdls_lup = mdls_lup,                                      mdl_nm_1L_chr = \"PHQ9_SOFAS_1_OLS_CLL\") predn_ds_ls <- make_predn_metadata_ls(data_tb,                                       id_var_nm_1L_chr = \"UID\",                                       msrmnt_date_var_nm_1L_chr = \"Date\",                                       predr_vars_nms_chr = c(PHQ9 = \"PHQ_total\",SOFAS = \"SOFAS_total\"),                                       round_var_nm_1L_chr = \"Timepoint\",                                       round_bl_val_1L_chr = \"Baseline\",                                       utl_var_nm_1L_chr = \"AQoL6D_HU\",                                       mdls_lup = mdls_lup,                                       mdl_nm_1L_chr = \"PHQ9_SOFAS_1_OLS_CLL\")"},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/articles/Prediction_With_Mdls.html","id":"predict-health-utility-at-baseline-and-follow-up-timepoints","dir":"Articles","previous_headings":"Apply the selected transfer to utility model to a prediction dataset to predict Quality Adjusted Life Years (QALYs)","what":"Predict health utility at baseline and follow-up timepoints","title":"Predict Quality Adjusted Life Years (QALYs)","text":"generate utility predictions use add_utl_predn function. function needs supplied prediction dataset (value passed argument data_tb) validated prediction metadata object created previous step. default add_utl_predn function samples model parameter values based table model coefficients making predictions constrains predictions allowed range. can override defaults adding additional arguments new_data_is_1L_chr = \"Predicted\" (uses mean parameter values), force_min_max_1L_lgl = F (removes range constraint) (source dataset makes available downloadable model objects) make_from_tbl_1L_lgl = F. settings produce different predictions. strongly recommended consult model catalogue (see ) understand decisions may affect validity predicted values generated. Prediction dataset predicted utilities health utility predictions now available use summarised .","code":"data_tb <- add_utl_predn(data_tb,                          predn_ds_ls = predn_ds_ls) ## Joining, by = c(\"UID\", \"Timepoint\") summary(data_tb$AQoL6D_HU) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ## 0.06155 0.43547 0.62386 0.62174 0.83325 1.00000"},{"path":"https://ready4-dev.github.io/youthu/articles/Prediction_With_Mdls.html","id":"calculate-qalys","dir":"Articles","previous_headings":"Apply the selected transfer to utility model to a prediction dataset to predict Quality Adjusted Life Years (QALYs)","what":"Calculate QALYs","title":"Predict Quality Adjusted Life Years (QALYs)","text":"last step calculate Quality Adjusted Life Years, using method assuming linear rate change timepoints. Prediction dataset QALYs","code":"data_tb <- data_tb %>% add_qalys_to_ds(predn_ds_ls = predn_ds_ls,                                        include_predrs_1L_lgl = F,                                        reshape_1L_lgl = F)"},{"path":"https://ready4-dev.github.io/youthu/articles/V_01.html","id":"change-is-coming","dir":"Articles","previous_headings":"","what":"Change is coming!","title":"Significant Changes To The Youthu Package","text":"youthu package undergoing significant redevelopment currently. result syntax soon look different outlined current vignettes. updates appear shortly.","code":""},{"path":"https://ready4-dev.github.io/youthu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Hamilton. Author, maintainer. Caroline Gao. Author. Orygen. Copyright holder, funder. Headspace. Funder. National Health Medical Research Council. Funder.","code":""},{"path":"https://ready4-dev.github.io/youthu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matthew Hamilton Caroline Gao  (2022). youthu: Transform Youth Outcomes Health Utility Predictions. Version 0.0.0.9112. https://doi.org/10.5281/zenodo.5646668","code":"@Manual{,   doi = {10.5281/zenodo.5646668},   title = {youthu: Transform Youth Outcomes to Health Utility Predictions},   author = {Matthew Hamilton and Caroline Gao},   year = {2022},   note = {R package version 0.0.0.9112},   url = {https://ready4-dev.github.io/youthu/}, }"},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/index.html","id":"transform-youth-outcomes-to-health-utility-predictions","dir":"","previous_headings":"","what":"Transform Youth Outcomes to Health Utility Predictions","title":"Transform Youth Outcomes to Health Utility Predictions","text":"Tools mapping measures routinely collected youth mental health services Quality Adjusted Life Years (QALYs). Part First Bounce model primary youth mental health services. development version youthu package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au). install development version software, run following commands R console:","code":"utils::install.packages(\"devtools\")  devtools::install_github(\"ready4-dev/youthu\")"},{"path":"https://ready4-dev.github.io/youthu/reference/add_change_in_ds_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Add change in dataset variable — add_change_in_ds_var","title":"Add change in dataset variable — add_change_in_ds_var","text":"add_change_in_ds_var() Add function updates object adding data object. Specifically, function implements algorithm add change dataset variable. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_change_in_ds_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add change in dataset variable — add_change_in_ds_var","text":"","code":"add_change_in_ds_var(   ds_tb,   id_var_nm_1L_chr = \"fkClientID\",   round_var_nm_1L_chr = \"round\",   round_bl_val_1L_chr = \"Baseline\",   change_var_nm_1L_chr,   var_nm_1L_chr,   arrange_by_id_lgl = T )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_change_in_ds_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add change in dataset variable — add_change_in_ds_var","text":"ds_tb Dataset (tibble) id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'fkClientID' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'round' round_bl_val_1L_chr Round baseline value (character vector length one), Default: 'Baseline' change_var_nm_1L_chr Change variable name (character vector length one) var_nm_1L_chr Variable name (character vector length one) arrange_by_id_lgl Arrange identity (logical vector), Default: T","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_change_in_ds_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add change in dataset variable — add_change_in_ds_var","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_by_tmpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add costs by time point — add_costs_by_tmpt","title":"Add costs by time point — add_costs_by_tmpt","text":"add_costs_by_tmpt() Add function updates object adding data object. Specifically, function implements algorithm add costs time point. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_by_tmpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add costs by time point — add_costs_by_tmpt","text":"","code":"add_costs_by_tmpt(   ds_tb,   round_var_nm_1L_chr,   round_lvls_chr = c(\"Baseline\", \"Follow-up\"),   costs_mean_dbl,   costs_sd_dbl,   extra_cost_args_ls = list(costs_var_nm_1L_chr = \"costs_dbl\"),   fn = add_costs_from_gamma_dstr )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_by_tmpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add costs by time point — add_costs_by_tmpt","text":"ds_tb Dataset (tibble) round_var_nm_1L_chr Round variable name (character vector length one) round_lvls_chr Round levels (character vector), Default: c(\"Baseline\", \"Follow-\") costs_mean_dbl Costs mean (double vector) costs_sd_dbl Costs standard deviation (double vector) extra_cost_args_ls Extra cost arguments (list), Default: list(costs_var_nm_1L_chr = \"costs_dbl\") fn Function (function), Default: add_costs_from_gamma_dstr","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_by_tmpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add costs by time point — add_costs_by_tmpt","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_from_gamma_dstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add costs from gamma distribution — add_costs_from_gamma_dstr","title":"Add costs from gamma distribution — add_costs_from_gamma_dstr","text":"add_costs_from_gamma_dstr() Add function updates object adding data object. Specifically, function implements algorithm add costs gamma distribution. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_from_gamma_dstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add costs from gamma distribution — add_costs_from_gamma_dstr","text":"","code":"add_costs_from_gamma_dstr(   ds_tb,   costs_mean_dbl,   costs_sd_dbl,   costs_var_nm_1L_chr = \"costs_dbl\" )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_from_gamma_dstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add costs from gamma distribution — add_costs_from_gamma_dstr","text":"ds_tb Dataset (tibble) costs_mean_dbl Costs mean (double vector) costs_sd_dbl Costs standard deviation (double vector) costs_var_nm_1L_chr Costs variable name (character vector length one), Default: 'costs_dbl'","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_costs_from_gamma_dstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add costs from gamma distribution — add_costs_from_gamma_dstr","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_dates_from_dstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Add dates from distribution — add_dates_from_dstr","title":"Add dates from distribution — add_dates_from_dstr","text":"add_dates_from_dstr() Add function updates object adding data object. Specifically, function implements algorithm add dates distribution. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_dates_from_dstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add dates from distribution — add_dates_from_dstr","text":"","code":"add_dates_from_dstr(   ds_tb,   bl_start_date_dtm,   bl_end_date_dtm,   duration_args_ls,   duration_fn = stats::rnorm,   date_var_nm_1L_chr = \"date_psx\",   id_var_nm_1L_chr = \"fkClientID\",   round_var_nm_1L_chr = \"round\",   round_bl_val_1L_chr = \"Baseline\",   origin_1L_chr = \"1970-01-01\" )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_dates_from_dstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add dates from distribution — add_dates_from_dstr","text":"ds_tb Dataset (tibble) bl_start_date_dtm Baseline start date (date vector) bl_end_date_dtm Baseline end date (date vector) duration_args_ls Duration arguments (list) duration_fn Duration (function), Default: stats::rnorm date_var_nm_1L_chr Date variable name (character vector length one), Default: 'date_psx' id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'fkClientID' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'round' round_bl_val_1L_chr Round baseline value (character vector length one), Default: 'Baseline' origin_1L_chr Origin (character vector length one), Default: '1970-01-01'","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_dates_from_dstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add dates from distribution — add_dates_from_dstr","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_diffs_by_group_and_tmpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add differences by group and time point — add_diffs_by_group_and_tmpt","title":"Add differences by group and time point — add_diffs_by_group_and_tmpt","text":"add_diffs_by_group_and_tmpt() Add function updates object adding data object. Specifically, function implements algorithm add differences group time point. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_diffs_by_group_and_tmpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add differences by group and time point — add_diffs_by_group_and_tmpt","text":"","code":"add_diffs_by_group_and_tmpt(   ds_tb = trial_ds_tb,   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   cmprsn_group_match_val_chr = c(\"Intervention\"),   round_var_nm_1L_chr = \"round\",   timepoint_match_val_1L_chr = \"Follow-up\",   match_idx_var_nm_1L_chr = \"match_idx_int\",   var_nms_chr,   fns_ls,   abs_mean_diff_dbl,   diff_sd_dbl,   multiplier_dbl,   min_dbl,   max_dbl,   integer_lgl )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_diffs_by_group_and_tmpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add differences by group and time point — add_diffs_by_group_and_tmpt","text":"ds_tb Dataset (tibble), Default: trial_ds_tb cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' cmprsn_group_match_val_chr Comparison group match value (character vector), Default: c(\"Intervention\") round_var_nm_1L_chr Round variable name (character vector length one), Default: 'round' timepoint_match_val_1L_chr Timepoint match value (character vector length one), Default: 'Follow-' match_idx_var_nm_1L_chr Match index variable name (character vector length one), Default: 'match_idx_int' var_nms_chr Variable names (character vector) fns_ls Functions (list) abs_mean_diff_dbl Absolute mean difference (double vector) diff_sd_dbl Difference standard deviation (double vector) multiplier_dbl Multiplier (double vector) min_dbl Minimum (double vector) max_dbl Maximum (double vector) integer_lgl Integer (logical vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_diffs_by_group_and_tmpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add differences by group and time point — add_diffs_by_group_and_tmpt","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Quality Adjusted Life Years — add_qalys","title":"Add Quality Adjusted Life Years — add_qalys","text":"add_qalys() Add function updates object adding data object. Specifically, function implements algorithm add quality adjusted life years. Function argument ds_tb specifies object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Quality Adjusted Life Years — add_qalys","text":"","code":"add_qalys(   ds_tb,   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   duration_var_nm_1L_chr = \"duration_prd\",   id_var_nm_1L_chr = \"fkClientID\",   match_idx_var_nm_1L_chr = \"match_idx_int\",   msrmnt_date_var_nm_1L_chr = \"date_dtm\",   qalys_var_nm_1L_chr = \"qalys_dbl\",   round_var_nm_1L_chr = \"round\",   round_bl_val_1L_chr = \"Baseline\",   utl_change_var_nm_1L_chr = \"utl_change_dbl\",   utl_var_nm_1L_chr = \"utility_dbl\",   reshape_1L_lgl = T )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Quality Adjusted Life Years — add_qalys","text":"ds_tb Dataset (tibble) cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' duration_var_nm_1L_chr Duration variable name (character vector length one), Default: 'duration_prd' id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'fkClientID' match_idx_var_nm_1L_chr Match index variable name (character vector length one), Default: 'match_idx_int' msrmnt_date_var_nm_1L_chr Measurement date variable name (character vector length one), Default: 'date_dtm' qalys_var_nm_1L_chr Quality Adjusted Life Years variable name (character vector length one), Default: 'qalys_dbl' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'round' round_bl_val_1L_chr Round baseline value (character vector length one), Default: 'Baseline' utl_change_var_nm_1L_chr Utility change variable name (character vector length one), Default: 'utl_change_dbl' utl_var_nm_1L_chr Utility variable name (character vector length one), Default: 'utility_dbl' reshape_1L_lgl Reshape (logical vector length one), Default: T","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Quality Adjusted Life Years — add_qalys","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys_to_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Quality Adjusted Life Years to dataset — add_qalys_to_ds","title":"Add Quality Adjusted Life Years to dataset — add_qalys_to_ds","text":"add_qalys_to_ds() Add function updates object adding data object. Specifically, function implements algorithm add quality adjusted life years dataset. Function argument ds_tb specifies object updated. function returns Dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys_to_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Quality Adjusted Life Years to dataset — add_qalys_to_ds","text":"","code":"add_qalys_to_ds(   ds_tb,   predn_ds_ls,   include_predrs_1L_lgl = T,   reshape_1L_lgl = T )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys_to_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Quality Adjusted Life Years to dataset — add_qalys_to_ds","text":"ds_tb Dataset (tibble) predn_ds_ls Prediction dataset (list) include_predrs_1L_lgl Include predictors (logical vector length one), Default: T reshape_1L_lgl Reshape (logical vector length one), Default: T","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_qalys_to_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Quality Adjusted Life Years to dataset — add_qalys_to_ds","text":"Dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_utl_predn.html","id":null,"dir":"Reference","previous_headings":"","what":"Add utility prediction — add_utl_predn","title":"Add utility prediction — add_utl_predn","text":"add_utl_predn() Add function updates object adding data object. Specifically, function implements algorithm add utility prediction. Function argument data_tb specifies object updated. function returns Updated (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_utl_predn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add utility prediction — add_utl_predn","text":"","code":"add_utl_predn(   data_tb,   predn_ds_ls,   deterministic_1L_lgl = T,   force_min_max_1L_lgl = T,   key_1L_chr = NULL,   make_from_tbl_1L_lgl = T,   model_mdl = NULL,   new_data_is_1L_chr = \"Simulated\",   server_1L_chr = \"dataverse.harvard.edu\",   utl_cls_fn = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/add_utl_predn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add utility prediction — add_utl_predn","text":"data_tb Data (tibble) predn_ds_ls Prediction dataset (list) deterministic_1L_lgl Deterministic (logical vector length one), Default: T force_min_max_1L_lgl Force minimum maximum (logical vector length one), Default: T key_1L_chr Key (character vector length one), Default: NULL make_from_tbl_1L_lgl Make table (logical vector length one), Default: T model_mdl Model (model), Default: NULL new_data_is_1L_chr New data (character vector length one), Default: 'Simulated' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' utl_cls_fn Utility class (function), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/add_utl_predn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add utility prediction — add_utl_predn","text":"Updated (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function — deprecated","title":"Deprecated function — deprecated","text":"Import deprecated function recommended lifecycle package documentation.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_ds_publication.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataverse dataset publication — get_dv_ds_publication","title":"Get dataverse dataset publication — get_dv_ds_publication","text":"get_dv_ds_publication() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get dataverse dataset publication. Function argument ds_url_1L_chr specifies look required object. function returns Digital object identifier url (character vector length one).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_ds_publication.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataverse dataset publication — get_dv_ds_publication","text":"","code":"get_dv_ds_publication(   ds_url_1L_chr,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_ds_publication.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataverse dataset publication — get_dv_ds_publication","text":"ds_url_1L_chr Dataset url (character vector length one) server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_ds_publication.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataverse dataset publication — get_dv_ds_publication","text":"Digital object identifier url (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_dss_mdl_smrys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataverse datasets model summarys — get_dv_dss_mdl_smrys","title":"Get dataverse datasets model summarys — get_dv_dss_mdl_smrys","text":"get_dv_dss_mdl_smrys() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get dataverse datasets model summarys. Function argument ids_chr specifies look required object. function returns Dataverse datasets model summarys (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_dss_mdl_smrys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataverse datasets model summarys — get_dv_dss_mdl_smrys","text":"","code":"get_dv_dss_mdl_smrys(   ids_chr,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_dss_mdl_smrys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataverse datasets model summarys — get_dv_dss_mdl_smrys","text":"ids_chr Identities (character vector) server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_dss_mdl_smrys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataverse datasets model summarys — get_dv_dss_mdl_smrys","text":"Dataverse datasets model summarys (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_mdl_smrys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataverse model summarys — get_dv_mdl_smrys","title":"Get dataverse model summarys — get_dv_mdl_smrys","text":"get_dv_mdl_smrys() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get dataverse model summarys. Function argument mdls_lup specifies look required object. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_mdl_smrys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataverse model summarys — get_dv_mdl_smrys","text":"","code":"get_dv_mdl_smrys(mdls_lup, mdl_nms_chr = NULL)"},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_mdl_smrys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataverse model summarys — get_dv_mdl_smrys","text":"mdls_lup Models (lookup table) mdl_nms_chr Model names (character vector), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_dv_mdl_smrys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataverse model summarys — get_dv_mdl_smrys","text":"Dataverse model (summarys)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_filtered_ttu_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Get filtered transfer to utility algorithm datasets — get_filtered_ttu_dss","title":"Get filtered transfer to utility algorithm datasets — get_filtered_ttu_dss","text":"get_filtered_ttu_dss() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get filtered transfer utility algorithm datasets. Function argument ttu_dv_dss_tb specifies look required object. function returns Transfer utility algorithm dataverse datasets (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_filtered_ttu_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get filtered transfer to utility algorithm datasets — get_filtered_ttu_dss","text":"","code":"get_filtered_ttu_dss(   ttu_dv_dss_tb = NULL,   mdl_predrs_in_ds_chr = NULL,   utility_type_chr = NULL,   ttu_dv_nms_chr = \"TTU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_filtered_ttu_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get filtered transfer to utility algorithm datasets — get_filtered_ttu_dss","text":"ttu_dv_dss_tb Transfer utility algorithm dataverse datasets (tibble), Default: NULL mdl_predrs_in_ds_chr Model predictors dataset (character vector), Default: NULL utility_type_chr Utility type (character vector), Default: NULL ttu_dv_nms_chr Transfer utility algorithm dataverse names (character vector), Default: 'TTU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_filtered_ttu_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get filtered transfer to utility algorithm datasets — get_filtered_ttu_dss","text":"Transfer utility algorithm dataverse datasets (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ctlg_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model catalogue url — get_mdl_ctlg_url","title":"Get model catalogue url — get_mdl_ctlg_url","text":"get_mdl_ctlg_url() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model catalogue url. Function argument mdls_lup specifies look required object. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ctlg_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model catalogue url — get_mdl_ctlg_url","text":"","code":"get_mdl_ctlg_url(   mdls_lup,   mdl_nm_1L_chr,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ctlg_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model catalogue url — get_mdl_ctlg_url","text":"mdls_lup Models (lookup table) mdl_nm_1L_chr Model name (character vector length one) server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ctlg_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model catalogue url — get_mdl_ctlg_url","text":"ctlg_url (object)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ds_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model dataset url — get_mdl_ds_url","title":"Get model dataset url — get_mdl_ds_url","text":"get_mdl_ds_url() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model dataset url. Function argument mdls_lup specifies look required object. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ds_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model dataset url — get_mdl_ds_url","text":"","code":"get_mdl_ds_url(mdls_lup, mdl_nm_1L_chr)"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ds_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model dataset url — get_mdl_ds_url","text":"mdls_lup Models (lookup table) mdl_nm_1L_chr Model name (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_ds_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model dataset url — get_mdl_ds_url","text":"mdl_ds_url (object)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_from_dv.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model from dataverse — get_mdl_from_dv","title":"Get model from dataverse — get_mdl_from_dv","text":"get_mdl_from_dv() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model dataverse. Function argument mdl_nm_1L_chr specifies look required object. function returns Model (model).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_from_dv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model from dataverse — get_mdl_from_dv","text":"","code":"get_mdl_from_dv(   mdl_nm_1L_chr,   dv_ds_nm_1L_chr = \"https://doi.org/10.7910/DVN/JC6PTV\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_from_dv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model from dataverse — get_mdl_from_dv","text":"mdl_nm_1L_chr Model name (character vector length one) dv_ds_nm_1L_chr Dataverse dataset name (character vector length one), Default: 'https://doi.org/10.7910/DVN/JC6PTV' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_from_dv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model from dataverse — get_mdl_from_dv","text":"Model (model)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model metadata — get_mdl_metadata","title":"Get model metadata — get_mdl_metadata","text":"get_mdl_metadata() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model metadata. Function argument mdls_lup specifies look required object. function returns Ingredients (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model metadata — get_mdl_metadata","text":"","code":"get_mdl_metadata(   mdls_lup,   mdl_nm_1L_chr,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model metadata — get_mdl_metadata","text":"mdls_lup Models (lookup table) mdl_nm_1L_chr Model name (character vector length one) server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model metadata — get_mdl_metadata","text":"Ingredients (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_smrys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model summarys — get_mdl_smrys","title":"Get model summarys — get_mdl_smrys","text":"get_mdl_smrys() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model summarys. Function argument ingredients_ls specifies look required object. function returns Models summary (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_smrys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model summarys — get_mdl_smrys","text":"","code":"get_mdl_smrys(ingredients_ls, mdl_nms_chr = NULL)"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_smrys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model summarys — get_mdl_smrys","text":"ingredients_ls Ingredients (list) mdl_nms_chr Model names (character vector), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdl_smrys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model summarys — get_mdl_smrys","text":"Models summary (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdls_lup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get models lookup table — get_mdls_lup","title":"Get models lookup table — get_mdls_lup","text":"get_mdls_lup() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get models lookup table. Function argument ttu_dv_dss_tb specifies look required object. function returns Models (lookup table).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdls_lup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get models lookup table — get_mdls_lup","text":"","code":"get_mdls_lup(   ttu_dv_dss_tb = NULL,   mdl_predrs_in_ds_chr = NULL,   utility_type_chr = NULL,   ttu_dv_nms_chr = \"TTU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdls_lup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get models lookup table — get_mdls_lup","text":"ttu_dv_dss_tb Transfer utility algorithm dataverse datasets (tibble), Default: NULL mdl_predrs_in_ds_chr Model predictors dataset (character vector), Default: NULL utility_type_chr Utility type (character vector), Default: NULL ttu_dv_nms_chr Transfer utility algorithm dataverse names (character vector), Default: 'TTU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_mdls_lup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get models lookup table — get_mdls_lup","text":"Models (lookup table)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model — get_model","title":"Get model — get_model","text":"get_model() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get model. Function argument mdls_lup specifies look required object. function returns Model (model).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model — get_model","text":"","code":"get_model(   mdls_lup,   mdl_nm_1L_chr,   make_from_tbl_1L_lgl = T,   mdl_meta_data_ls = NULL,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model — get_model","text":"mdls_lup Models (lookup table) mdl_nm_1L_chr Model name (character vector length one) make_from_tbl_1L_lgl Make table (logical vector length one), Default: T mdl_meta_data_ls Model meta data (list), Default: NULL server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model — get_model","text":"Model (model)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_predictors_lup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get predictors lookup table — get_predictors_lup","title":"Get predictors lookup table — get_predictors_lup","text":"get_predictors_lup() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get predictors lookup table. Function argument mdl_meta_data_ls specifies look required object. function returns Predictors (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_predictors_lup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get predictors lookup table — get_predictors_lup","text":"","code":"get_predictors_lup(   mdl_meta_data_ls = NULL,   mdls_lup = NULL,   mdl_nm_1L_chr = NULL,   outp_is_abbrs_tb = F,   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_predictors_lup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get predictors lookup table — get_predictors_lup","text":"mdl_meta_data_ls Model meta data (list), Default: NULL mdls_lup Models (lookup table), Default: NULL mdl_nm_1L_chr Model name (character vector length one), Default: NULL outp_is_abbrs_tb Output abbreviations (tibble), Default: F server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_predictors_lup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get predictors lookup table — get_predictors_lup","text":"Predictors (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_tfmn_from_lup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transformation from lookup table — get_tfmn_from_lup","title":"Get transformation from lookup table — get_tfmn_from_lup","text":"get_tfmn_from_lup() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get transformation lookup table. Function argument mdl_nm_1L_chr specifies look required object. function returns Transformation (character vector length one).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_tfmn_from_lup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transformation from lookup table — get_tfmn_from_lup","text":"","code":"get_tfmn_from_lup(mdl_nm_1L_chr, mdls_lup = NULL)"},{"path":"https://ready4-dev.github.io/youthu/reference/get_tfmn_from_lup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transformation from lookup table — get_tfmn_from_lup","text":"mdl_nm_1L_chr Model name (character vector length one) mdls_lup Models (lookup table), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_tfmn_from_lup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transformation from lookup table — get_tfmn_from_lup","text":"Transformation (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_ds_smrys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transfer to utility algorithm dataset summarys — get_ttu_ds_smrys","title":"Get transfer to utility algorithm dataset summarys — get_ttu_ds_smrys","text":"get_ttu_ds_smrys() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get transfer utility algorithm dataset summarys. Function argument ttu_dv_nm_1L_chr specifies look required object. function returns Dataverse datasets model summarys (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_ds_smrys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transfer to utility algorithm dataset summarys — get_ttu_ds_smrys","text":"","code":"get_ttu_ds_smrys(   ttu_dv_nm_1L_chr = \"TTU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL,   reference_int = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_ds_smrys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transfer to utility algorithm dataset summarys — get_ttu_ds_smrys","text":"ttu_dv_nm_1L_chr Transfer utility algorithm dataverse name (character vector length one), Default: 'TTU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL reference_int Reference (integer vector), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_ds_smrys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transfer to utility algorithm dataset summarys — get_ttu_ds_smrys","text":"Dataverse datasets model summarys (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transfer to utility algorithm dataverse datasets — get_ttu_dv_dss","title":"Get transfer to utility algorithm dataverse datasets — get_ttu_dv_dss","text":"get_ttu_dv_dss() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get transfer utility algorithm dataverse datasets. Function argument ttu_dv_nms_chr specifies look required object. function returns Transfer utility algorithm dataverse datasets (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transfer to utility algorithm dataverse datasets — get_ttu_dv_dss","text":"","code":"get_ttu_dv_dss(   ttu_dv_nms_chr = \"TTU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transfer to utility algorithm dataverse datasets — get_ttu_dv_dss","text":"ttu_dv_nms_chr Transfer utility algorithm dataverse names (character vector), Default: 'TTU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transfer to utility algorithm dataverse datasets — get_ttu_dv_dss","text":"Transfer utility algorithm dataverse datasets (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_predrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get transfer to utility algorithm dataverse predictors — get_ttu_dv_predrs","title":"Get transfer to utility algorithm dataverse predictors — get_ttu_dv_predrs","text":"get_ttu_dv_predrs() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get transfer utility algorithm dataverse predictors. Function argument ttu_dv_dss_tb specifies look required object. function returns Predictors (character vector).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_predrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get transfer to utility algorithm dataverse predictors — get_ttu_dv_predrs","text":"","code":"get_ttu_dv_predrs(   ttu_dv_dss_tb = NULL,   ttu_dv_nms_chr = \"TTU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_predrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get transfer to utility algorithm dataverse predictors — get_ttu_dv_predrs","text":"ttu_dv_dss_tb Transfer utility algorithm dataverse datasets (tibble), Default: NULL ttu_dv_nms_chr Transfer utility algorithm dataverse names (character vector), Default: 'TTU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/get_ttu_dv_predrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get transfer to utility algorithm dataverse predictors — get_ttu_dv_predrs","text":"Predictors (character vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_balanced_fake_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Make balanced fake dataset — make_balanced_fake_ds","title":"Make balanced fake dataset — make_balanced_fake_ds","text":"make_balanced_fake_ds() Make function creates new R object. Specifically, function implements algorithm make balanced fake dataset. function returns Dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_balanced_fake_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make balanced fake dataset — make_balanced_fake_ds","text":"","code":"make_balanced_fake_ds(   ds_tb,   match_on_vars_chr,   id_var_nm_1L_chr = \"UID_chr\",   round_var_nm_1L_chr = \"Timepoint_chr\",   timepoint_bl_val_1L_chr = \"Baseline\",   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   cmprsn_groups_chr = c(\"Intervention\", \"Control\") )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_balanced_fake_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make balanced fake dataset — make_balanced_fake_ds","text":"ds_tb Dataset (tibble) match_on_vars_chr Match variables (character vector) id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'UID_chr' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'Timepoint_chr' timepoint_bl_val_1L_chr Timepoint baseline value (character vector length one), Default: 'Baseline' cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' cmprsn_groups_chr Comparison groups (character vector), Default: c(\"Intervention\", \"Control\")","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_balanced_fake_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make balanced fake dataset — make_balanced_fake_ds","text":"Dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_costs_vec_from_gamma_dstr.html","id":null,"dir":"Reference","previous_headings":"","what":"Make costs vector from gamma distribution — make_costs_vec_from_gamma_dstr","title":"Make costs vector from gamma distribution — make_costs_vec_from_gamma_dstr","text":"make_costs_vec_from_gamma_dstr() Make function creates new R object. Specifically, function implements algorithm make costs vector gamma distribution. function returns Costs (double vector).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_costs_vec_from_gamma_dstr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make costs vector from gamma distribution — make_costs_vec_from_gamma_dstr","text":"","code":"make_costs_vec_from_gamma_dstr(n_int, costs_mean_dbl, costs_sd_dbl)"},{"path":"https://ready4-dev.github.io/youthu/reference/make_costs_vec_from_gamma_dstr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make costs vector from gamma distribution — make_costs_vec_from_gamma_dstr","text":"n_int N (integer vector) costs_mean_dbl Costs mean (double vector) costs_sd_dbl Costs standard deviation (double vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_costs_vec_from_gamma_dstr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make costs vector from gamma distribution — make_costs_vec_from_gamma_dstr","text":"Costs (double vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_cst_efcn_smry.html","id":null,"dir":"Reference","previous_headings":"","what":"Make cost effectiveness summary — make_cst_efcn_smry","title":"Make cost effectiveness summary — make_cst_efcn_smry","text":"make_cst_efcn_smry() Make function creates new R object. Specifically, function implements algorithm make cost effectiveness summary. function returns Summary (double vector).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_cst_efcn_smry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make cost effectiveness summary — make_cst_efcn_smry","text":"","code":"make_cst_efcn_smry(   ds_tb,   idxs_int,   change_types_chr = \"dbl\",   benefits_pfx_1L_chr = \"qalys_dbl\",   benefits_var_nm_1L_chr = \"qalys\",   costs_pfx_1L_chr = \"costs_dbl\",   costs_var_nm_1L_chr = \"costs\",   change_sfx_1L_chr = \"change\",   change_vars_chr = NA_character_,   cmprsn_groups_chr = c(\"Intervention\", \"Control\"),   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   round_fup_val_1L_chr = \"Follow-up\" )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_cst_efcn_smry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make cost effectiveness summary — make_cst_efcn_smry","text":"ds_tb Dataset (tibble) idxs_int Indices (integer vector) change_types_chr Change types (character vector), Default: 'dbl' benefits_pfx_1L_chr Benefits prefix (character vector length one), Default: 'qalys_dbl' benefits_var_nm_1L_chr Benefits variable name (character vector length one), Default: 'qalys' costs_pfx_1L_chr Costs prefix (character vector length one), Default: 'costs_dbl' costs_var_nm_1L_chr Costs variable name (character vector length one), Default: 'costs' change_sfx_1L_chr Change suffix (character vector length one), Default: 'change' change_vars_chr Change variables (character vector), Default: 'NA' cmprsn_groups_chr Comparison groups (character vector), Default: c(\"Intervention\", \"Control\") cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' round_fup_val_1L_chr Round follow-value (character vector length one), Default: 'Follow-'","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_cst_efcn_smry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make cost effectiveness summary — make_cst_efcn_smry","text":"Summary (double vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Make fake dataset one — make_fake_ds_one","title":"Make fake dataset one — make_fake_ds_one","text":"make_fake_ds_one() Make function creates new R object. Specifically, function implements algorithm make fake dataset one. function returns Fake data (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make fake dataset one — make_fake_ds_one","text":"","code":"make_fake_ds_one()"},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make fake dataset one — make_fake_ds_one","text":"Fake data (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_two.html","id":null,"dir":"Reference","previous_headings":"","what":"Make fake dataset two — make_fake_ds_two","title":"Make fake dataset two — make_fake_ds_two","text":"make_fake_ds_two() Make function creates new R object. Specifically, function implements algorithm make fake dataset two. function returns Matched dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_two.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make fake dataset two — make_fake_ds_two","text":"","code":"make_fake_ds_two()"},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_ds_two.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make fake dataset two — make_fake_ds_two","text":"Matched dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_trial_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Make fake trial dataset — make_fake_trial_ds","title":"Make fake trial dataset — make_fake_trial_ds","text":"make_fake_trial_ds() Make function creates new R object. Specifically, function implements algorithm make fake trial dataset. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_trial_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make fake trial dataset — make_fake_trial_ds","text":"","code":"make_fake_trial_ds(   ds_tb,   id_var_nm_1L_chr = \"fkClientID\",   round_var_nm_1L_chr = \"round\",   round_lvls_chr = c(\"Baseline\", \"Follow-up\"),   match_on_vars_chr,   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   cmprsn_groups_chr = c(\"Intervention\", \"Control\"),   fns_ls,   var_nms_chr,   abs_mean_diff_dbl,   diff_sd_dbl,   multiplier_dbl,   min_dbl,   max_dbl,   integer_lgl,   match_idx_var_nm_1L_chr = \"match_idx_int\" )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_trial_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make fake trial dataset — make_fake_trial_ds","text":"ds_tb Dataset (tibble) id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'fkClientID' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'round' round_lvls_chr Round levels (character vector), Default: c(\"Baseline\", \"Follow-\") match_on_vars_chr Match variables (character vector) cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' cmprsn_groups_chr Comparison groups (character vector), Default: c(\"Intervention\", \"Control\") fns_ls Functions (list) var_nms_chr Variable names (character vector) abs_mean_diff_dbl Absolute mean difference (double vector) diff_sd_dbl Difference standard deviation (double vector) multiplier_dbl Multiplier (double vector) min_dbl Minimum (double vector) max_dbl Maximum (double vector) integer_lgl Integer (logical vector) match_idx_var_nm_1L_chr Match index variable name (character vector length one), Default: 'match_idx_int'","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_fake_trial_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make fake trial dataset — make_fake_trial_ds","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_hlth_ec_smry.html","id":null,"dir":"Reference","previous_headings":"","what":"Make health economic summary — make_hlth_ec_smry","title":"Make health economic summary — make_hlth_ec_smry","text":"make_hlth_ec_smry() Make function creates new R object. Specifically, function implements algorithm make health economic summary. function returns summary (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_hlth_ec_smry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make health economic summary — make_hlth_ec_smry","text":"","code":"make_hlth_ec_smry(   ds_tb,   predn_ds_ls,   wtp_dbl = 50000,   bootstrap_iters_1L_int = 1000,   benefits_pfx_1L_chr = \"qalys_dbl\",   benefits_var_nm_1L_chr = \"qalys\",   costs_var_nm_1L_chr = \"costs\",   change_sfx_1L_chr = \"change\" )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_hlth_ec_smry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make health economic summary — make_hlth_ec_smry","text":"ds_tb Dataset (tibble) predn_ds_ls Prediction dataset (list) wtp_dbl Willingness pay (double vector), Default: 50000 bootstrap_iters_1L_int Bootstrap iterations (integer vector length one), Default: 1000 benefits_pfx_1L_chr Benefits prefix (character vector length one), Default: 'qalys_dbl' benefits_var_nm_1L_chr Benefits variable name (character vector length one), Default: 'qalys' costs_var_nm_1L_chr Costs variable name (character vector length one), Default: 'costs' change_sfx_1L_chr Change suffix (character vector length one), Default: 'change'","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_hlth_ec_smry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make health economic summary — make_hlth_ec_smry","text":"summary (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Make matched dataset — make_matched_ds","title":"Make matched dataset — make_matched_ds","text":"make_matched_ds() Make function creates new R object. Specifically, function implements algorithm make matched dataset. function returns Matched dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make matched dataset — make_matched_ds","text":"","code":"make_matched_ds(sngl_grp_ds_tb, cmprsn_smry_tb, ds_smry_ls)"},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make matched dataset — make_matched_ds","text":"sngl_grp_ds_tb Single group dataset (tibble) cmprsn_smry_tb Comparison summary (tibble) ds_smry_ls Dataset summary (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make matched dataset — make_matched_ds","text":"Matched dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds_spine.html","id":null,"dir":"Reference","previous_headings":"","what":"Make matched dataset spine — make_matched_ds_spine","title":"Make matched dataset spine — make_matched_ds_spine","text":"make_matched_ds_spine() Make function creates new R object. Specifically, function implements algorithm make matched dataset spine. function returns Matched dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds_spine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make matched dataset spine — make_matched_ds_spine","text":"","code":"make_matched_ds_spine(   ds_tb,   round_var_nm_1L_chr = \"Timepoint_chr\",   timepoint_bl_val_1L_chr = \"Baseline\",   cmprsn_var_nm_1L_chr = \"study_arm_chr\",   active_arm_val_1L_chr = \"Intervention\",   id_var_nm_1L_chr = \"fkClientID\",   match_on_vars_chr )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds_spine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make matched dataset spine — make_matched_ds_spine","text":"ds_tb Dataset (tibble) round_var_nm_1L_chr Round variable name (character vector length one), Default: 'Timepoint_chr' timepoint_bl_val_1L_chr Timepoint baseline value (character vector length one), Default: 'Baseline' cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: 'study_arm_chr' active_arm_val_1L_chr Active arm value (character vector length one), Default: 'Intervention' id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'fkClientID' match_on_vars_chr Match variables (character vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_matched_ds_spine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make matched dataset spine — make_matched_ds_spine","text":"Matched dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_predn_metadata_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Make prediction metadata list — make_predn_metadata_ls","title":"Make prediction metadata list — make_predn_metadata_ls","text":"make_predn_metadata_ls() Make function creates new R object. Specifically, function implements algorithm make prediction metadata list. function returns Prediction metadata (list).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_predn_metadata_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make prediction metadata list — make_predn_metadata_ls","text":"","code":"make_predn_metadata_ls(   data_tb,   cmprsn_groups_chr = NULL,   cmprsn_var_nm_1L_chr = NULL,   costs_var_nm_1L_chr = NULL,   id_var_nm_1L_chr = \"UID\",   mdl_meta_data_ls = NULL,   mdls_lup = NULL,   mdl_nm_1L_chr = NULL,   msrmnt_date_var_nm_1L_chr = NULL,   predr_vars_nms_chr = NULL,   round_var_nm_1L_chr,   round_bl_val_1L_chr,   utl_var_nm_1L_chr = \"AQoL6D_HU\",   server_1L_chr = \"dataverse.harvard.edu\",   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/youthu/reference/make_predn_metadata_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make prediction metadata list — make_predn_metadata_ls","text":"data_tb Data (tibble) cmprsn_groups_chr Comparison groups (character vector), Default: NULL cmprsn_var_nm_1L_chr Comparison variable name (character vector length one), Default: NULL costs_var_nm_1L_chr Costs variable name (character vector length one), Default: NULL id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'UID' mdl_meta_data_ls Model meta data (list), Default: NULL mdls_lup Models (lookup table), Default: NULL mdl_nm_1L_chr Model name (character vector length one), Default: NULL msrmnt_date_var_nm_1L_chr Measurement date variable name (character vector length one), Default: NULL predr_vars_nms_chr Predictor variables names (character vector), Default: NULL round_var_nm_1L_chr Round variable name (character vector length one) round_bl_val_1L_chr Round baseline value (character vector length one) utl_var_nm_1L_chr Utility variable name (character vector length one), Default: 'AQoL6D_HU' server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu' key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_predn_metadata_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make prediction metadata list — make_predn_metadata_ls","text":"Prediction metadata (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_sngl_grp_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Make single group dataset — make_sngl_grp_ds","title":"Make single group dataset — make_sngl_grp_ds","text":"make_sngl_grp_ds() Make function creates new R object. Specifically, function implements algorithm make single group dataset. function returns Single group dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_sngl_grp_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make single group dataset — make_sngl_grp_ds","text":"","code":"make_sngl_grp_ds(seed_ds_tb = NULL, ds_smry_ls)"},{"path":"https://ready4-dev.github.io/youthu/reference/make_sngl_grp_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make single group dataset — make_sngl_grp_ds","text":"seed_ds_tb Seed dataset (tibble), Default: NULL ds_smry_ls Dataset summary (list)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/make_sngl_grp_ds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make single group dataset — make_sngl_grp_ds","text":"Single group dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/mdls_lup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup table of prediction models — mdls_lup","title":"Lookup table of prediction models — mdls_lup","text":"summary key descriptive features prediction models included youthu package.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/mdls_lup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup table of prediction models — mdls_lup","text":"","code":"mdls_lup"},{"path":"https://ready4-dev.github.io/youthu/reference/mdls_lup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup table of prediction models — mdls_lup","text":"object class tbl_df (inherits tbl, data.frame) 32 rows 5 columns.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/mdls_lup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup table of prediction models — mdls_lup","text":"tibble mdl_nms_chr Model names (character vector) predrs_ls Predictors (list) mdl_type_chr Model type (character vector) tfmn_chr Transformation (character vector) source_chr Source (character vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Implements: https://github.com/sckott/analogsea/issues/32 https://github.com/rstudio/ggvis/blob/master/R/pipe.R.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs, rhs object function apply ","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/predict_from_mdl_coefs.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from model coefficients — predict_from_mdl_coefs","title":"Predict from model coefficients — predict_from_mdl_coefs","text":"predict_from_mdl_coefs() Predict function makes predictions data using specified statistical model. Specifically, function implements algorithm predict model coefficients. function returns Predicted (double vector).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/predict_from_mdl_coefs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from model coefficients — predict_from_mdl_coefs","text":"","code":"predict_from_mdl_coefs(smry_of_mdl_tb, new_data_tb)"},{"path":"https://ready4-dev.github.io/youthu/reference/predict_from_mdl_coefs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from model coefficients — predict_from_mdl_coefs","text":"smry_of_mdl_tb Summary model (tibble) new_data_tb New data (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/predict_from_mdl_coefs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from model coefficients — predict_from_mdl_coefs","text":"Predicted (double vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/transform_ds_for_cmprsn.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform dataset for comparison — transform_ds_for_cmprsn","title":"Transform dataset for comparison — transform_ds_for_cmprsn","text":"transform_ds_for_cmprsn() Transform function edits object way core object attributes - e.g. shape, dimensions, elements, type - altered. Specifically, function implements algorithm transform dataset comparison. Function argument ds_tb specifies object updated. Argument cmprsn_var_nm_1L_chr provides object updated. function returns Dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/transform_ds_for_cmprsn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform dataset for comparison — transform_ds_for_cmprsn","text":"","code":"transform_ds_for_cmprsn(   ds_tb,   cmprsn_var_nm_1L_chr,   id_var_nm_1L_chr = \"UID_chr\",   round_var_nm_1L_chr = \"Timepoint_chr\",   cmprsn_groups_chr = c(\"Intervention\", \"Control\") )"},{"path":"https://ready4-dev.github.io/youthu/reference/transform_ds_for_cmprsn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform dataset for comparison — transform_ds_for_cmprsn","text":"ds_tb Dataset (tibble) cmprsn_var_nm_1L_chr Comparison variable name (character vector length one) id_var_nm_1L_chr Identity variable name (character vector length one), Default: 'UID_chr' round_var_nm_1L_chr Round variable name (character vector length one), Default: 'Timepoint_chr' cmprsn_groups_chr Comparison groups (character vector), Default: c(\"Intervention\", \"Control\")","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/transform_ds_for_cmprsn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform dataset for comparison — transform_ds_for_cmprsn","text":"Dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_col_with_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Update column with difference — update_col_with_diff","title":"Update column with difference — update_col_with_diff","text":"update_col_with_diff() Update function edits object, preserving core object attributes. Specifically, function implements algorithm update column difference. Function argument ds_tb specifies object updated. Argument var_nm_1L_chr provides object updated. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_col_with_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update column with difference — update_col_with_diff","text":"","code":"update_col_with_diff(   ds_tb,   var_nm_1L_chr,   fn,   abs_mean_diff_1L_dbl,   diff_sd_1L_dbl,   multiplier_1L_dbl,   min_1L_dbl,   max_1L_dbl,   integer_1L_lgl )"},{"path":"https://ready4-dev.github.io/youthu/reference/update_col_with_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update column with difference — update_col_with_diff","text":"ds_tb Dataset (tibble) var_nm_1L_chr Variable name (character vector length one) fn Function (function) abs_mean_diff_1L_dbl Absolute mean difference (double vector length one) diff_sd_1L_dbl Difference standard deviation (double vector length one) multiplier_1L_dbl Multiplier (double vector length one) min_1L_dbl Minimum (double vector length one) max_1L_dbl Maximum (double vector length one) integer_1L_lgl Integer (logical vector length one)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_col_with_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update column with difference — update_col_with_diff","text":"New (dataset)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_multpl_cols_with_diffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Update multiplier columns with differences — update_multpl_cols_with_diffs","title":"Update multiplier columns with differences — update_multpl_cols_with_diffs","text":"update_multpl_cols_with_diffs() Update function edits object, preserving core object attributes. Specifically, function implements algorithm update multiplier columns differences. Function argument ds_tb specifies object updated. Argument var_nms_chr provides object updated. function returns Updated dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_multpl_cols_with_diffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update multiplier columns with differences — update_multpl_cols_with_diffs","text":"","code":"update_multpl_cols_with_diffs(   ds_tb,   var_nms_chr,   fns_ls,   abs_mean_diff_dbl,   diff_sd_dbl,   multiplier_dbl,   min_dbl,   max_dbl,   integer_lgl )"},{"path":"https://ready4-dev.github.io/youthu/reference/update_multpl_cols_with_diffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update multiplier columns with differences — update_multpl_cols_with_diffs","text":"ds_tb Dataset (tibble) var_nms_chr Variable names (character vector) fns_ls Functions (list) abs_mean_diff_dbl Absolute mean difference (double vector) diff_sd_dbl Difference standard deviation (double vector) multiplier_dbl Multiplier (double vector) min_dbl Minimum (double vector) max_dbl Maximum (double vector) integer_lgl Integer (logical vector)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/update_multpl_cols_with_diffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update multiplier columns with differences — update_multpl_cols_with_diffs","text":"Updated dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/youthu/reference/youthu-package.html","id":null,"dir":"Reference","previous_headings":"","what":"youthu: Transform Youth Outcomes to Health Utility Predictions — youthu-package","title":"youthu: Transform Youth Outcomes to Health Utility Predictions — youthu-package","text":"Tools mapping measures routinely collected youth mental health services Quality Adjusted Life Years (QALYs). Part First Bounce model primary youth mental health services. development version youthu package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au).  Tools mapping measures routinely collected youth mental health services Quality Adjusted Life Years (QALYs). Part First Bounce model primary youth mental health services. development version youthu package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au).","code":""},{"path":[]},{"path":"https://ready4-dev.github.io/youthu/reference/youthu-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"youthu: Transform Youth Outcomes to Health Utility Predictions — youthu-package","text":"Maintainer: Matthew Hamilton matthew.hamilton@orygen.org.au (ORCID) Authors: Caroline Gao caroline.gao@orygen.org.au (ORCID) contributors: Orygen [copyright holder, funder] Headspace [funder] National Health Medical Research Council [funder] Maintainer: Matthew Hamilton matthew.hamilton@orygen.org.au (ORCID) Authors: Caroline Gao caroline.gao@orygen.org.au (ORCID) contributors: Orygen [copyright holder, funder] Headspace [funder] National Health Medical Research Council [funder]","code":""}]
